{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\R\\\\Documents\\\\Thinkful\\\\Module27 Capstone Flashcard App\\\\Qualified\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\DeckOverview.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport Home from \"./Home\";\nimport Study from \"./Study\";\nimport CardList from \"./CardList\";\nimport { stripCards, listDecks, createDeck, readDeck, updateDeck, deleteDeck, listCards, createCard, readCard, updateCard, deleteCard } from \"../utils/api/index\";\nimport { BrowserRouter as Router, Link, NavLink, Route, Switch, useLocation, useHistory, useParams, useRouteMatch } from \"react-router-dom\";\n\nfunction DeckOverview(props) {\n  const {\n    deckId\n  } = useParams(); //code for getting cards in the deck to display\n\n  const [cardListState, setCardListState] = useState([]);\n  useEffect(() => {\n    async function loadCards() {\n      let listOfCards = await listCards(deckId);\n      setCardListState(listOfCards);\n    }\n\n    loadCards();\n  }, []);\n  console.log(cardListState, 'cardliststate');\n  const mappedCards = cardListState.map(card => {\n    return /*#__PURE__*/React.createElement(CardList, {\n      key: card.id,\n      front: card.front,\n      back: card.back,\n      id: card.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    });\n  }); // console.log(deckId)\n  // console.log(props.id, 'props.id is undefined')\n  // console.log(props.deckList, 'props.deckList')\n  // if(Object.keys(props.deckList).length){\n  //   console.log(props.deckList[0].id, 'props.deckList[0]')\n  //}\n\n  if (deckId === props.id) {\n    console.log(deckId, \"DECK ID WORKS\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    \"aria-label\": \"breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    className: \"breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item active\",\n    \"aria-current\": \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"ActualDeckNameProp \", deckId))), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, \"DeckNameProp \", deckId), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, \"Deck description propDeck description propDeck description propDeck description propDeck description prop \", deckId), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/decks/${deckId}/edit`,\n    class: \"btn btn-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, ``, \" \", ``, \" Edit\"), /*#__PURE__*/React.createElement(Link, {\n    to: `/decks/${deckId}/study`,\n    class: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, ``, \" \", ``, \" Study\"), /*#__PURE__*/React.createElement(Link, {\n    to: `/decks/${deckId}/cards/new`,\n    class: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }), ``, \" \", ``, \" Add Cards\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/decks/delete\",\n    class: \"btn btn-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-trash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    class: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, \"Cards\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default DeckOverview;","map":{"version":3,"sources":["C:/Users/R/Documents/Thinkful/Module27 Capstone Flashcard App/Qualified/Project_Flashcards_Qualified_1/src/Layout/DeckOverview.js"],"names":["React","useEffect","useState","Header","NotFound","Home","Study","CardList","stripCards","listDecks","createDeck","readDeck","updateDeck","deleteDeck","listCards","createCard","readCard","updateCard","deleteCard","BrowserRouter","Router","Link","NavLink","Route","Switch","useLocation","useHistory","useParams","useRouteMatch","DeckOverview","props","deckId","cardListState","setCardListState","loadCards","listOfCards","console","log","mappedCards","map","card","id","front","back"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport NotFound from \"./NotFound\";\r\nimport Home from \"./Home\";\r\nimport Study from \"./Study\";\r\nimport CardList from \"./CardList\"\r\nimport {\r\n  stripCards,\r\n  listDecks,\r\n  createDeck,\r\n  readDeck,\r\n  updateDeck,\r\n  deleteDeck,\r\n  listCards,\r\n  createCard,\r\n  readCard,\r\n  updateCard,\r\n  deleteCard,\r\n} from \"../utils/api/index\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  NavLink,\r\n  Route,\r\n  Switch,\r\n  useLocation,\r\n  useHistory,\r\n  useParams,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\n\r\nfunction DeckOverview(props) {\r\n  const { deckId } = useParams();\r\n\r\n\r\n  //code for getting cards in the deck to display\r\n  const [cardListState, setCardListState] = useState([])\r\n  \r\n  useEffect(() => {\r\n    async function loadCards() {\r\n      let listOfCards = await listCards(deckId)\r\n      setCardListState(listOfCards)\r\n    }\r\n    loadCards()\r\n  },[])\r\n  console.log(cardListState, 'cardliststate')\r\n\r\n  const mappedCards = cardListState.map((card) => {\r\n    return (\r\n      <CardList\r\n        key={card.id}\r\n        front={card.front}\r\n        back={card.back}\r\n        id={card.id}        \r\n      />\r\n    );\r\n  });\r\n\r\n\r\n\r\n  // console.log(deckId)\r\n  // console.log(props.id, 'props.id is undefined')\r\n  // console.log(props.deckList, 'props.deckList')\r\n\r\n  // if(Object.keys(props.deckList).length){\r\n  //   console.log(props.deckList[0].id, 'props.deckList[0]')\r\n  //}\r\n\r\n\r\nif (deckId === props.id ){\r\n    console.log(deckId, \"DECK ID WORKS\")\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            ActualDeckNameProp {deckId}\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <h4>DeckNameProp {deckId}</h4>\r\n      <p>\r\n        Deck description propDeck description propDeck description propDeck\r\n        description propDeck description prop {deckId}\r\n      </p>\r\n\r\n      <div>\r\n        <Link to={`/decks/${deckId}/edit`} class=\"btn btn-secondary\">\r\n          {``} {``} Edit\r\n        </Link>\r\n        <Link to={`/decks/${deckId}/study`} class=\"btn btn-primary\">\r\n          {``} {``} Study\r\n        </Link>\r\n        <Link to={`/decks/${deckId}/cards/new`} class=\"btn btn-primary\">        \r\n          <span className=\"oi oi-plus\" />\r\n          {``} {``} Add Cards\r\n        </Link>\r\n        <Link to=\"/decks/delete\" class=\"btn btn-danger\">\r\n          <span className=\"oi oi-trash\" />\r\n        </Link>\r\n{/* TO DO, SHOWING ALL CARDS using listCards */}\r\n        <h2 class=\"card-title\">Cards</h2>\r\n        <br />\r\n        <div>\r\n         \r\n        </div>\r\n      </div>\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeckOverview;\r\n"]},"metadata":{},"sourceType":"module"}